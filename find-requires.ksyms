#! /bin/bash

IFS=$'\n'

# Extract all of the symbols provided by this module.
all_provides() {
    if [[ -n $(nm "$@" | sed -r -ne 's:^0*([0-9a-f]+) A __crc_(.+):0x\1 \2:p') ]]; then
        nm "$@" \
        | sed -r -ne 's:^0*([0-9a-f]+) A __crc_(.+):0x\1 \2:p' \
        | awk --non-decimal-data '{printf("0x%08x\t%s\n", $1, $2)}' \
        | LC_ALL=C sort -k2,2 -u
    else
        ELFRODATA=$(readelf -R .rodata "$@" | awk '/0x/{printf $2$3$4$5}')
        if [[ -n $(readelf -h "$@" | grep "little endian") ]]; then
            RODATA=$(echo $ELFRODATA | sed 's/\(..\)\(..\)\(..\)\(..\)/\4\3\2\1/g')
        else
            RODATA=$ELFRODATA
        fi
        for sym in $(nm "$@" | sed -r -ne 's:^0*([0-9a-f]+) R __crc_(.+):0x\1 \2:p'); do
            echo $sym $RODATA
        done \
        | awk --non-decimal-data '{printf("0x%08s\t%s\n", substr($3,($1*2)+1,8), $2)}' \
        | LC_ALL=C sort -k2,2 -u
    fi
}

# Extract all of the requirements of this module.
all_requires() {
    for module in "$@"; do
        set -- $(/sbin/modinfo -F vermagic "$module" | sed -e 's: .*::' -e q)
        /sbin/modprobe --dump-modversions "$module" \
        | awk --non-decimal-data '
            BEGIN { FS = "\t" ; OFS = "\t" }
            {printf("0x%08x\t%s\n", $1, $2)}' \
        | sed -r -e 's:$:\t'"$1"':'
    done \
    | LC_ALL=C sort -k2,2 -u
}

# Filter out requirements fulfilled by the module itself.
mod_requires() {
    LC_ALL=C join -t $'\t' -j 2 -v 1 \
        <(all_requires "$@") \
        <(all_provides "$@") \
    | LC_ALL=C sort -k1,1 -u
}

if ! [ -e /sbin/modinfo -a -e /sbin/modprobe ]; then
    cat > /dev/null
    exit 0
fi

modules=($(grep -E '/lib/modules/.+\.ko$'))
if [ ${#modules[@]} -gt 0 ]; then
    kernel=$(/sbin/modinfo -F vermagic "${modules[0]}" | sed -e 's: .*::' -e q)

    # get all that kernel provides
    symvers=$(mktemp -t ${0##*/}.XXXXX)

    cat /usr/src/kernels/$kernel/Module.symvers | awk '
        BEGIN { FS = "\t" ; OFS = "\t" }
        { print $2 "\t" $1 }
    ' \
    | sed -r -e 's:$:\t'"$kernel"':' \
    | LC_ALL=C sort -k1,1 -u > $symvers

    # Symbols matching with the kernel get a "kernel" dependency
    LC_ALL=C join -t $'\t' -j 1 $symvers <(mod_requires "${modules[@]}") | LC_ALL=C sort -u \
    | awk '{ FS = "\t" ; OFS = "\t" } { print "kernel(" $1 ") = " $2 }'

    # Symbols from elsewhere get a "ksym" dependency
    LC_ALL=C join -t $'\t' -j 1 -v 2 $symvers <(mod_requires "${modules[@]}") | LC_ALL=C sort -u \
    | awk '{ FS = "\t" ; OFS = "\t" } { print "ksym(" $1 ") = " $2 }'
fi
