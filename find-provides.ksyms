#! /bin/bash

IFS=$'\n'
export LC_ALL=C

for module in $(grep -E '/lib/modules/.+\.ko(\.gz|\.bz2|\.xz|\.zst)?$') "$@"; do
    dep_pfx="ksym"
    # For built-in kmods, "kernel()" syntax is used instead of "ksym()"
    printf "%s" "$module" | grep -v "^${RPM_BUILD_ROOT}/\?lib/modules/[1-9][^/]*/kernel" > /dev/null \
        || dep_pfx="kernel"

    tmpfile=""
    if [ "x${module%.ko}" = "x${module}" ]; then
        tmpfile=$(mktemp -t ${0##*/}.XXXXXX.ko)
        proc_bin=
        case "${module##*.}" in
        zst)
                proc_bin=zstd
                ;;
        xz)
                proc_bin=xz
                ;;
        bz2)
                proc_bin=bzip2
                ;;
        gz)
                proc_bin=gzip
                ;;
        esac

        [ -n "$proc_bin" ] || continue

        "$proc_bin" -d -c - < "$module" > "$tmpfile" || continue
        module="$tmpfile"
    fi

    if nm "$module" | grep -qE '^([0-9a-f]+) A __crc_(.+)' 2> /dev/null; then
        nm "$module" \
        | awk \
           -v 'dep_pfx='"$dep_pfx" \
           --non-decimal-data \
          'match($0, /^([0-9a-f]+) A __crc_(.+)/, a) { printf("%s(%s) = 0x%08x\n", dep_pfx, a[2], strtonum("0x" a[1])) }' \
        | sort -u
    else
        ELFRODATA=$(readelf -R .rodata $module | awk '/0x/{printf $2$3$4$5}')
        if [[ -n $(readelf -h $module | grep "little endian") ]]; then
            RODATA=$(echo $ELFRODATA | sed 's/\(..\)\(..\)\(..\)\(..\)/\4\3\2\1/g')
        else
            RODATA=$ELFRODATA
        fi
        for sym in $(nm $module | sed -r -ne 's:^0*([0-9a-f]+) R __crc_(.+):0x\1 \2:p'); do
            echo $sym $RODATA
        done \
        | awk --non-decimal-data '{printf("'"${dep_pfx}"'(%s) = 0x%08s\n", $2, substr($3,($1*2)+1,8))}' \
        | sort -u
    fi

    [ -z "$tmpfile" ] || rm -f -- "$tmpfile"
done
